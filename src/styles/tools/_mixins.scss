/**
 * mixins.scss
 *
 * Mixins to help make things less repetitive
 *
 */

/* Jagged edge
   ========================================================================== */

/**
 * Usage:
 * selector {
 *   @include jagged-edge('bottom');
 * }
 */
@mixin jagged-edge($edge) {
  @if $edge == 'bottom' {
    clip-path: polygon(0	0, 100%	0, 100%	90%, 80.5%	91.4%, 73.9%	92.8%, 67.1%	93.5%, 62%	94.1%, 55.6%	94.5%, 53.3%	94.8%, 43.7%	95.9%, 38.3%	95.8%, 34.4%	96.7%, 29.6%	97.2%, 25.4%	97.7%, 21.8%	98%, 20.3%	97.7%, 19.6%	97.8%, 19.5%	97.9%, 18.9%	97.8%, 18.2%	97.7%, 17%	97.9%, 16.3%	97.7%, 15.3%	98.1%, 14.5%	98%, 13%	98.4%, 12.2%	98.3%, 11.7%	98%, 10.8%	98.4%, 10.5%	98.8%, 10.7%	98.8%, 11.3%	99.1%, 10%	99.3%, 10%	99.2%, 8.2%	99.5%, 6.9%	99.6%, 6.7%	99.4%, 5.9%	99.3%, 6.4%	99.5%, 6.3%	99.7%, 3.1%	99.9%, 3.1%	99.7%, 3.5%	99.7%, 4%	99.4%, 4.3%	99.3%, 4.6%	99.3%, 4.2%	99.1%, 3%	99.3%, 2.4%	99.3%, 2.5%	99.2%, 2.4%	99.1%, 1.9%	99%, 1.7%	98.8%, 1.6%	99.2%, 1.4%	99.3%, 1.5%	99.4%, 1.8%	99.4%, 2.2%	99.6%, 2.2%	99.8%, 2.1%	100%, 0.1%	100%, 0.2%	100%, 0 99.9%);
  }

  @if $edge == 'top' {
    clip-path: polygon(0	0, 0	100%, 100% 100%, 100%	10%, 80.5%	8.6%, 73.9%	7.2%, 67.1%	6.5%, 62%	5.9%, 55.6%	5.5%, 53.3%	5.2%, 43.7%	4.1%, 38.3%	4.2%, 34.4%	3.3%, 29.6%	2.8%, 25.4%	2.3%, 21.8%	2%, 20.3%	2.3%, 19.6%	2.2%, 19.5%	2.1%, 18.9%	2.2%, 18.2%	2.3%, 17%	2.2%, 16.3%	2.3%, 15.3%	2%, 14.5%	2%, 13%	1.6%, 12.2%	1.7%, 11.7%	2%, 10.8%	1.6%, 10.5%	1.2%, 10.7%	1.2%, 11.3%	0.9%, 10%	0.7%, 10%	0.8%, 8.2%	0.5%, 6.9%	0.4%, 6.7%	0.6%, 5.9%	0.7%, 6.4%	0.5%, 6.3%	0.3%, 3.1%	0.1%, 3.1%	0.3%, 3.5%	0.3%, 4%	0.6%, 4.3%	0.7%, 4.6%	0.7%, 4.2%	0.9%, 3%	0.7%, 2.4%	0.7%, 2.5%	0.8%, 2.4%	0.9%, 1.9%	1%, 1.7%	1.2%, 1.6%	0.8%, 1.4%	0.7%, 1.5%	0.6%, 1.8%	0.6%, 2.2%	0.4%, 2.2%	0.2%, 2.1%	0, 0.1%	0, 0.2%	0, 0	0.1%);
  }
}

/* Qualify selector
   ========================================================================== */

/**
 * Sometimes the cascade can be a pain
 * https://css-tricks.com/snippets/sass/mixin-to-qualify-a-selector/
 *
 * Usage:
 * .class {
 *   // specific rules when a link has the class
 *   @include when-is(a) {
 *     // insert rules here
 *   }
 * }
 */
@mixin qualify($element-selector) {
  @at-root #{$element-selector + &} {
    @content;
  }
}

// alias for nicer more readable code
@mixin when-is($args...) {
  @include qualify($args...) {
    @content;
  }
}

/* Lazy font
   ========================================================================== */

/**
 * Automatically add the custom typeface to the font-family list of the
 * approptiate selector when the fonts have been loaded.
 * See the $custom-fonts variable in /tools/_global-variables for available
 * options.
 *
 * Usage:
 * selector {
 *   @include lazy-font('heading');
 * }
 */
@mixin lazy-font($context) {
  $options: map-keys($custom-fonts);

  @if map-has-key($custom-fonts, #{$context}) {
    font-family: theme('fontFamily.#{$context}');

    .fonts-loaded & {
      font-family: map-get($custom-fonts, #{$context}), theme('fontFamily.#{$context}');
    }
  }

  @else {
    @error "#{$context} is invalid. Try using one of these: #{$options}";
  }
}
