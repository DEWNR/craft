{#
 # Cookies
 #
 # Macros for getting and setting cookies natively with Craft CMS 3.1.17 or later
 #
 # Usage:
 # {% import "_boilerplate/_partials/cookies.twig" as cookies %}
 # Get a cookie:
 # {% set woof = cookies.get('cookie-monster') %}
 # Set a cookie:
 # {% do cookies.set('cookie-monster', 'more cookies please', now | date_modify('+1 hour').timestamp) %}
 #
 #}

{#
 # Return the value the cookie specified in `name`. The return value will be an
 # empty string if the cookie doesn't exist.
 #
 # @param string                    name
 # @param yii\web\CookieCollection  cookieJar
 #
 # @return string className
 #
 #}

{%- macro get(name, cookieJar = null) -%}
    {% spaceless %}
        {% set cookieJar = cookieJar ?? craft.app.request.cookies %}
        {% set cookie = cookieJar.get(name) %}
        {{ cookie.value ?? '' }}
    {% endspaceless %}
{%- endmacro -%}

{#
 # Set the cookie specified in `name` to the value specified in `value`, with an
 # expiration with format `+1 hour` or `+2 days`.
 # Format: set(name, value, expires, path, domain, secure, httpOnly, sameSite, cookieJar)
 #
 # @param string                    name
 # @param string                    value
 # @param int                       expires
 # @param string                    path
 # @param string                    domain
 # @param bool                      secure
 # @param bool                      httpOnly
 # @param string                    sameSite
 # @param yii\web\CookieCollection  cookieJar
 #
 #}

{%- macro set(name, value = '', expires = 0, path = '/', domain = '', secure = false, httpOnly = false, sameSite = null, cookieJar = null) -%}
    {% spaceless %}
        {% set cookieJar = cookieJar ?? craft.app.response.cookies %}
        {% set domain = domain|length ?: craft.app.config.general.defaultCookieDomain %}
        {% set cookie = create({
            'class': 'yii\\web\\Cookie',
            'name': name,
            'value': value,
            'path': path,
            'domain': domain,
            'secure': secure,
            'httpOnly': httpOnly,
            'sameSite': sameSite,
            'expire': now|date_modify(expires).timestamp
        }) %}
        {% do cookieJar.add(cookie) %}
    {% endspaceless %}
{%- endmacro -%}
